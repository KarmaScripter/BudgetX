Option Compare Database
Option Explicit


Private m_AccountCode As String
Private m_BFY As String
Private m_Fund As String
Private m_AH As String
Private m_ORG As String
Private m_RC As String
Private m_Activity As String
Private m_Document As String
Private m_Amount As Double
Private m_ID As Integer
Private m_Error As String



'---------------------------------------------------------------------------------
'   Type        Contructor/Finalizer
'   Name        Class_Initialize/Class_Terminate
'   Parameters  Void
'   RetVal
'   Purpose
'---------------------------------------------------------------------------------
Public Sub Class_Initialize()
End Sub

Public Sub Class_Terminate()
End Sub







'---------------------------------------------------------------------------------
'   Type            Property-Let
'   Name
'   Parameters      Void
'   Return          Void
'   Purpose
'---------------------------------------------------------------------------------
Public Property Let ID(num As Integer)
    On Error GoTo ErrorHandler:
    If num > 0 Then
        m_ID = num
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="ID"
    Exit Property
End Property




'---------------------------------------------------------------------------------
'   Type            Property-Get
'   Name
'   Parameters      Void
'   Return          String
'   Purpose
'---------------------------------------------------------------------------------
Public Property Get ID() As Integer
    On Error GoTo ErrorHandler:
    If m_ID > 0 Then
        ID = m_ID
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="ID"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Let
'   Name
'   Parameters      Void
'   Return          Void
'   Purpose
'---------------------------------------------------------------------------------
Public Property Let AccountCode(pCode As String)
    On Error GoTo ErrorHandler:
    If Not pCode & "" = "" Then
        m_AccountCode = pCode
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="AccountCode"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Get
'   Name
'   Parameters      Void
'   Return          String
'   Purpose
'---------------------------------------------------------------------------------
Public Property Get AccountCode() As String
    On Error GoTo ErrorHandler:
    If Not m_AccountCode & "" = "" Then
        AccountCode = m_AccountCode
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="AccountCode"
    Exit Property
End Property




'---------------------------------------------------------------------------------
'   Type            Property-Let
'   Name
'   Parameters      Void
'   Return          Void
'   Purpose
'---------------------------------------------------------------------------------
Public Property Let BFY(pBFY As String)
    On Error GoTo ErrorHandler:
    If Not pBFY & "" = "" Then
        m_BFY = pBFY
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="BFY"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Get
'   Name
'   Parameters      Void
'   Return          String
'   Purpose
'---------------------------------------------------------------------------------
Public Property Get BFY() As String
    On Error GoTo ErrorHandler:
    If Not m_BFY & "" = "" Then
        BFY = m_BFY
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="BFY"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Let
'   Name
'   Parameters      Void
'   Return          Void
'   Purpose
'---------------------------------------------------------------------------------
Public Property Let Fund(pFund As String)
    On Error GoTo ErrorHandler:
    If Not pFund & "" = "" Then
        m_Fund = pFund
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="Fund"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Get
'   Name
'   Parameters      Void
'   Return          String
'   Purpose
'---------------------------------------------------------------------------------
Public Property Get Fund() As String
    On Error GoTo ErrorHandler:
    If Not m_Fund & "" = "" Then
        Fund = m_Fund
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="Fund"
    Exit Property
End Property





'---------------------------------------------------------------------------------
'   Type            Property-Let
'   Name
'   Parameters      Void
'   Return          Void
'   Purpose
'---------------------------------------------------------------------------------
Public Property Let AH(pAH As String)
    On Error GoTo ErrorHandler:
    If Not pAH & "" = "" Then
        m_AH = pAH
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="AH"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Get
'   Name
'   Parameters      Void
'   Return          String
'   Purpose
'---------------------------------------------------------------------------------
Public Property Get AH() As String
    On Error GoTo ErrorHandler:
    If Not m_AH & "" = "" Then
        AH = m_AH
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="AH"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Let
'   Name
'   Parameters      Void
'   Return          Void
'   Purpose
'---------------------------------------------------------------------------------
Public Property Let Document(pDocument As String)
    On Error GoTo ErrorHandler:
    If Not pDocument & "" = "" Then
        m_Document = pDocument
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="Document"
    Exit Property
End Property



'---------------------------------------------------------------------------------
'   Type            Property-Get
'   Name
'   Parameters      Void
'   Return          String
'   Purpose
'---------------------------------------------------------------------------------
Public Property Get Document() As String
    On Error GoTo ErrorHandler:
    If Not m_Document & "" = "" Then
        Document = m_Document
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="Document"
    Exit Property
End Property



'---------------------------------------------------------------------------------
'   Type            Property-Let
'   Name
'   Parameters      Void
'   Return          Void
'   Purpose
'---------------------------------------------------------------------------------
Public Property Let ORG(pOrg As String)
    On Error GoTo ErrorHandler:
    If Not pOrg & "" = "" Then
        m_ORG = pOrg
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="ORG"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Get
'   Name
'   Parameters      Void
'   Return          String
'   Purpose
'---------------------------------------------------------------------------------
Public Property Get ORG() As String
    On Error GoTo ErrorHandler:
    If Not m_ORG & "" = "" Then
        ORG = m_ORG
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="ORG"
    Exit Property
End Property



'---------------------------------------------------------------------------------
'   Type            Property-Let
'   Name
'   Parameters      Void
'   Return          Void
'   Purpose
'---------------------------------------------------------------------------------
Public Property Let Activity(pActivity As String)
    On Error GoTo ErrorHandler:
    If Not pActivity & "" = "" Then
        m_Activity = pActivity
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="Activity"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Get
'   Name
'   Parameters      Void
'   Return          String
'   Purpose
'---------------------------------------------------------------------------------
Public Property Get Activity() As String
    On Error GoTo ErrorHandler:
    If Not m_Activity & "" = "" Then
        Activity = m_Activity
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="Activity"
    Exit Property
End Property




'---------------------------------------------------------------------------------
'   Type            Property-Let
'   Name
'   Parameters      Void
'   Return          Void
'   Purpose
'---------------------------------------------------------------------------------
Public Property Let Amount(pAmount As Double)
    On Error GoTo ErrorHandler:
    If Not pAmount <> 0 Then
        m_Amount = pAmount
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="Amount"
    Exit Property
End Property


'---------------------------------------------------------------------------------
'   Type            Property-Get
'   Name
'   Parameters      Void
'   Return          String
'   Purpose
'---------------------------------------------------------------------------------
Public Property Get Amount() As Double
    On Error GoTo ErrorHandler:
    If Not m_Amount <> 0 Then
        Amount = m_Amount
    End If
ErrorHandler:
    ProcessError Name:="Expenditure", _ 
        Member:="Amount"
    Exit Property
End Property






'----------------------------------------------------------------------------------
'   Type:        Event Sub-Procedure
'   Name:        Process
'   Parameters:  Void
'   Retval:      Void
'   Purpose:
'---------------------------------------------------------------------------------
Private Sub ProcessError(Optional Name As String, Optional Member As String)
    If Err.Number <> 0 And _
        Not IsMissing(Name) And _
        Not IsMissing(Member) Then
            m_Error = "Source:      " & Err.Source _
                & vbCrLf & "Number:     " & Err.Number _
                & vbCrLf & "Issue:      " & Err.Description _
                & vbCrLf & "Class:      " & Name _
                & vbCrLf & "Member:     " & Member
    End If
    If Err.Number <> 0 And _
        IsMissing(Name) And _
        IsMissing(Member) Then
            m_Error = "Source:      " & Err.Source _
                & vbCrLf & "Number:     " & Err.Number _
                & vbCrLf & "Issue:      " & Err.Description
    End If
    MessageFactory.ShowError (m_Error)
    Err.Clear
End Sub



